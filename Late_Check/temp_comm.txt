Antentyk_Yuriy


=================================================
=================================================
=================================================

Batsenko_Tetiana


=================================================
=================================================
=================================================

Bevz_Andrian


=================================================


Так як здано після дедлайну і без попередніх спроб, оцінювання відповідно до максимуму "зі штрафом".

1) Чому на графіку дослідження сценарії запусків для різних машин різні? Але вцілому зараховано за виконання додаткового завдання.
Стає зрозуміло.

MAX_THREADS=$(nproc --all) 
Проблема в самій суті дослідження, варто було дослідити на кількість потоків більшу ніж кількість процесорів, щоб дізнатися як саме буде падати ефективність (і чи буде падати взагалі, до певної межі, зайві потоки можуть дати більше простору для диспетчеризації в разі простою деяких з наявних)


2) Здача зі скомпільованим сміттям (папки дебагу та фінального запуску), нагадую персонально, так як працюємо із компільованою платформозалежною мовою, при перевірці ці збірки не мають жодного змісту
= сміття! (-0.5 балу) про це говорилося на каналі Слек з поміткою "ЧИТАТИ ОБОВʼЯЗКОВО ВСІМ!".


3) Тести непогані, але автотест можна було б і легшим зробити.


4) За такі костилі в інквізиції були програми 'all inclusive':
double precision = pow(10.0, -atoi(argv[5]));
cout << "Consecutive time, ms:\n" << (int)((double)to_us(total)/1000) << endl;


5) ніде немає пояснення як має виглядати конфіг, щоб зрозуміти доводиться лізти в код. Про обробку некоректного конфігу й мови нема.

7) Що за хитрий хід з магічними значеннями?
double intgrl1 = threadIntegral(x1_start, x1_end, x2_start, x2_end, 250, threads);
    double intgrl2 = threadIntegral(x1_start, x1_end, x2_start, x2_end, 500, threads);
    double diff = fabs(intgrl2 - intgrl1);
    int divs = 1000;
Здогадуюся, що це ініціалізація початкового стану, але все ж таки так теж не робиться.

8) for (int i=0; i<threads; i++) 
ліпше for (int i=0; i<threads; ++і). А ще ліпше переписати, щоб можна було використовувати ідіому "foreach" 


 - Виведе найменший час роботи за виконані запуски.
А не середній!

Програма обов'язково повинна опрацьовувати помилки! 

Слід повідомляти про відсутність файлу конфігурації, відсутність необхідних параметрів у файлі конфігурації чи командному рядку, завідомо невірні значення цих параметрів. 

Якщо сталася помилка, після виведення повідомлення про неї, програма повинна завершитися із кодом завершення, відмінним від нуля. Якщо програма завершила виконання успішно, слід повернути код  завершення 0.


Є ряд косметичних помилок. Щоб отримати бали разом із  додатковими бажано доопрацювати.
Доопрацювати!

+ перевірка таки непідйомно велика.

=================================================
=================================================

Borkivskyy_Anton


=================================================
=================================================
=================================================

Borkivskyy_Bohdan


=================================================
=================================================
=================================================

Borsuk_Vasyl


=================================================
=================================================
=================================================

Denys_Andrian


=================================================
=================================================
=================================================

Fedoriv_Sviatoslav


=================================================

1) Здано зі сміттям.

2) Видається, що не ознайомлювався зі змістом постів "за мотивами перевірки практичних".
- актуальні багато зауважень звідти!!!! (зокрема щодо компіляції і прапорців)


3) щось пішло не так:
for (double j = -2; j< 3;j++){

4) const char *to_hex(char c) {
    // thise function change char to hex cod...
    int res_int = c & 0xff;

    std::stringstream s_stream;
    s_stream << std::hex << res_int;
    std::string res(s_stream.str());

    return res.c_str();
}

==> зчитування файлу реалізовано надто специфічно.

5) int Nthreads  = stod(dataFromConsol[6]);
типова помикла  в нетиповій інтерпритації.

6) Не реалізований алгоритм змменшення кроку для досягнення потрібної похибки.


Скомпілювати не зміг. (чи то я не знаю з якої ліби тягнулися деякі ф-ї чи забули додати якийсь файл (зробити комміт) на гіт)


Думаю, перед доопрацюванням варто зробити персональне ревью коду. Бажано з Максимом.

Перед зустріччю перечитати код та зауваження на каналі Слек! (ОБОВ'ЯЗКОВО!)

=================================================
=================================================

Hirna_Mariya


=================================================
=================================================
=================================================

Holosko_Sofiia


=================================================
=================================================
=================================================

Kachmar_Pavlo


=================================================
=================================================
=================================================

Khoma_Andri


=================================================
=================================================
=================================================

Komarenski_Maksim


=================================================
=================================================
=================================================

Kosarevych_Ivan


=================================================
=================================================
=================================================

Kostyshyn_Iryna


=================================================
=================================================
=================================================

Kozak_Oleksander


=================================================
Код робочий, але так і не реалізовано зменшення кроку для досягнення бажаної похибки, а це основа роботи!

тому й при багаторазових запусках маємо однакові результати (мало б насторожити)

цитата із завдання!
Для інтегрування можна використати звичайний метод клітин – узагальнення методу прямокутників на двовимірний випадок. Слід розбити прямокутник, на якому інтегрується функція, на квадрати, та вважати значення інтегралу сумою значень функції у таких точках на площу квадратів: https://uk.wikipedia.org/wiki/Метод_прямокутників , http://www.mathros.net.ua/obchyslennja-podvijnyh-integraliv-metodom-klityn.html

доробити цю вимогу (якщо за посиланнями буде не ясно)


=================================================
=================================================

Liepieshov_Kostiantyn


=================================================
=================================================
=================================================

Lozynska_Marta


=================================================
=================================================
=================================================

Makarova_Kateryna


=================================================
=================================================
=================================================

Mazurkevych_Taras


=================================================
=================================================
=================================================

Melnychuk_Vladyslav


=================================================
=================================================
=================================================

Orenchuk_Yevhenii


=================================================
=================================================
=================================================

Petruk_Marian


=================================================
=================================================
=================================================

Poliakov_Mykhailo


=================================================
=================================================
=================================================

Popov_Rostyslav


=================================================
=================================================
=================================================

Pryshlyak_Martha


=================================================

1) Компіляція за цим скриптом не на Windows ( напевне) неможлива, надто багато спеціалізованих викликів.

2) В проекті двічі визначена точка входу,  (ф-я) main. Це проект не може компілюватися.

3) Використання мьютексів незрозуміле. Питання: навіщо потрібен мьютекс?
double n_th_shuberts_integral(double minx, double miny,double maxx, double maxy, int m, int steps,int max_steps, double &abs_err,
                            double &rel_err,double &cur_abs_err, double &cur_rel_err, double &cur_res){
    mutex mx;

    cur_res = shuberts_integral(minx, miny, maxx, maxy, m, steps);
    double prev_res = cur_res;

    mx.lock();
    while (steps < max_steps) {
        prev_res = cur_res;
        steps *= 2;
        cur_res = shuberts_integral(minx, miny, maxx, maxy, m, steps);
        cur_abs_err = fabs(cur_res - prev_res);
        cur_rel_err = fabs((cur_res - prev_res) / cur_res);
        if (cur_abs_err < abs_err && cur_rel_err < rel_err) {
            break;
        }
    }
    mx.unlock();
    return cur_res;
}

4) Дрібні стилістичні: Використання const, ++i замість і++.

5) Чому тут вектор, а потім вже звичайний масив?:
std::vector<int> numbs;
thread thread_array[config.numb_of_thr+1];

6) Але добрим є використання виключень (правда чомусть в деяких місцях замість них таки використовується код завершення)
Використання структури даних, де вона потрібна.

7) В даному завданні взагалі ліпше уникати використання спільних ресурсів, інакше це викликає невиправдані складнощі.

8) навіщо передавати в потік посилання на спільні ресурси, які, власне, спільно не використовуються?
Враховуючи неправильне використання мьютекса гарантувати що їх заміри показують щось логічне не можна.

7) При ручному запуску не вдалося отримати приросту в швидкодії, навпаки час виконання зростав з кількістю потоків.

8) if (cur_abs_err < abs_err && cur_rel_err < rel_err) ... чому тут '&&' ?

8) якщо вже є спеціалізована структура даних, навіщо її розпаковувати і передавати в потік поаргументно?


Загалом від коду доволі непогане враження, але на цьому фоні збаває з пантелику реалізація паралелізації обчислень. Замість паралелізації рахувати те саме кілька разів, ще й з помилкою не є виконанням завдання.
Так як помилки стосуються самої суті завдань, потрібно переробити, паралалізація не виконана.

=================================================
=================================================

Romaniuk_Myroslava


=================================================
=================================================
=================================================

Romaniv Nazar


=================================================
=================================================
=================================================

Semeniuk_Pavlo


=================================================
=================================================
=================================================

Shankovskiy_Danil


=================================================
=================================================
=================================================

Shtohrinets_Bohdan


=================================================
=================================================
=================================================

Siromska_Anastasia


=================================================
=================================================
=================================================

Stasinchuk_Yrii


=================================================
=================================================
=================================================

Stepaniuk_Roman


=================================================
=================================================
=================================================

Temnyk_Maryana


=================================================
=================================================
=================================================

Tepliukh_Yur


=================================================
=================================================
=================================================

Triska_Luka_Marko


=================================================
=================================================
=================================================

Turiy_Borys


=================================================
=================================================
=================================================

Tymchyshyn_Arsen


=================================================
=================================================
=================================================

Ursul_Vladyslav


=================================================
=================================================
=================================================

Vdovych_Stanislav


=================================================
=================================================
=================================================

Vey_Roman


=================================================
=================================================
=================================================

Voloskiy_Maksym


=================================================
=================================================
=================================================

Yezhov_Victor


=================================================
=================================================
=================================================

Yuzkiv_Viktoriia


=================================================
=================================================
=================================================

Zabulskyy_Volodymyr


=================================================
=================================================
=================================================

Zakharchenko_Iryna


=================================================
=================================================
=================================================

Zhuravchak_Andrii


=================================================
=================================================
=================================================

Zubrytsky_Markian


=================================================
=================================================
=================================================

